<?php

/**
 * BaseGame
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property timestamp $date_start
 * @property integer $home_user_id
 * @property integer $home_team_id
 * @property integer $home_team_score
 * @property integer $away_user_id
 * @property integer $away_team_id
 * @property integer $away_team_score
 * @property integer $stadium_id
 * @property string $access_code
 * @property string $url
 * @property sfGuardUser $HomeUser
 * @property sfGuardUser $AwayUser
 * @property Team $HomeTeam
 * @property Team $AwayTeam
 * @property Stadium $Stadium
 * @property Doctrine_Collection $Movements
 * 
 * @method timestamp           getDateStart()       Returns the current record's "date_start" value
 * @method integer             getHomeUserId()      Returns the current record's "home_user_id" value
 * @method integer             getHomeTeamId()      Returns the current record's "home_team_id" value
 * @method integer             getHomeTeamScore()   Returns the current record's "home_team_score" value
 * @method integer             getAwayUserId()      Returns the current record's "away_user_id" value
 * @method integer             getAwayTeamId()      Returns the current record's "away_team_id" value
 * @method integer             getAwayTeamScore()   Returns the current record's "away_team_score" value
 * @method integer             getStadiumId()       Returns the current record's "stadium_id" value
 * @method string              getAccessCode()      Returns the current record's "access_code" value
 * @method string              getUrl()             Returns the current record's "url" value
 * @method sfGuardUser         getHomeUser()        Returns the current record's "HomeUser" value
 * @method sfGuardUser         getAwayUser()        Returns the current record's "AwayUser" value
 * @method Team                getHomeTeam()        Returns the current record's "HomeTeam" value
 * @method Team                getAwayTeam()        Returns the current record's "AwayTeam" value
 * @method Stadium             getStadium()         Returns the current record's "Stadium" value
 * @method Doctrine_Collection getMovements()       Returns the current record's "Movements" collection
 * @method Game                setDateStart()       Sets the current record's "date_start" value
 * @method Game                setHomeUserId()      Sets the current record's "home_user_id" value
 * @method Game                setHomeTeamId()      Sets the current record's "home_team_id" value
 * @method Game                setHomeTeamScore()   Sets the current record's "home_team_score" value
 * @method Game                setAwayUserId()      Sets the current record's "away_user_id" value
 * @method Game                setAwayTeamId()      Sets the current record's "away_team_id" value
 * @method Game                setAwayTeamScore()   Sets the current record's "away_team_score" value
 * @method Game                setStadiumId()       Sets the current record's "stadium_id" value
 * @method Game                setAccessCode()      Sets the current record's "access_code" value
 * @method Game                setUrl()             Sets the current record's "url" value
 * @method Game                setHomeUser()        Sets the current record's "HomeUser" value
 * @method Game                setAwayUser()        Sets the current record's "AwayUser" value
 * @method Game                setHomeTeam()        Sets the current record's "HomeTeam" value
 * @method Game                setAwayTeam()        Sets the current record's "AwayTeam" value
 * @method Game                setStadium()         Sets the current record's "Stadium" value
 * @method Game                setMovements()       Sets the current record's "Movements" collection
 * 
 * @package    elastball
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGame extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('game');
        $this->hasColumn('date_start', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('home_user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('home_team_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('home_team_score', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('away_user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('away_team_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('away_team_score', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('stadium_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('access_code', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as HomeUser', array(
             'local' => 'home_user_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as AwayUser', array(
             'local' => 'away_user_id',
             'foreign' => 'id'));

        $this->hasOne('Team as HomeTeam', array(
             'local' => 'home_team_id',
             'foreign' => 'id'));

        $this->hasOne('Team as AwayTeam', array(
             'local' => 'away_team_id',
             'foreign' => 'id'));

        $this->hasOne('Stadium', array(
             'local' => 'stadium_id',
             'foreign' => 'id'));

        $this->hasMany('Movement as Movements', array(
             'local' => 'id',
             'foreign' => 'game_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}